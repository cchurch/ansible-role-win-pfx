---

- name: check that required vars are defined to create local pfx file
  set_fact:
    _pfx_crt_content: "{{ pfx_crt | default(omit, true) | mandatory }}"
    _pfx_key_content: "{{ pfx_key | default(omit, true) | mandatory }}"
    _pfx_ca_content: "{{ pfx_ca | default('', true) }}"
  when: not pfx_file | default('', true)

- block:

    - block:

        - name: create temp file for local cert input
          tempfile:
            state: file
            suffix: .crt
          register: _pfx_crt_file
          delegate_to: localhost

        - name: create temp file for local key input
          tempfile:
            state: file
            suffix: .key
          register: _pfx_key_file
          delegate_to: localhost

        - name: create temp file for local pfx output
          tempfile:
            state: file
            suffix: .pfx
          register: _pfx_pfx_file
          delegate_to: localhost

        - name: write cert and ca bundle to local temp file
          copy:
            content: |
              {{ _pfx_crt_content }}
              {{ _pfx_ca_content }}
            dest: "{{ _pfx_crt_file.path }}"
          delegate_to: localhost

        - name: write key to local temp file
          copy:
            content: "{{ _pfx_key_content }}"
            dest: "{{ _pfx_key_file.path }}"
          delegate_to: localhost

        - name: create local temp pfx file content from cert and key
          command: >-
            openssl pkcs12 -export
            -passout 'pass:' -out {{ _pfx_pfx_file.path | quote }}
            -inkey {{ _pfx_key_file.path | quote }} -in {{ _pfx_crt_file.path | quote }}
          delegate_to: localhost

        - name: save local copy of pfx file
          fetch:
            src: "{{ _pfx_pfx_file.path }}"
            dest: "{{ pfx_output_file }}"
            flat: true
          when: pfx_output_file | default('', true)
          delegate_to: localhost

      when: not pfx_file | default('', true)

    - name: create remote temp file for pfx
      win_tempfile:
        state: file
        suffix: .pfx
      register: _pfx_remote_tempfile

    - name: copy local pfx file to remote
      win_copy:
        src: "{{ pfx_file | default(_pfx_pfx_file.path, true) }}"
        dest: "{{ _pfx_remote_tempfile.path }}"

    - name: install (or remove) cert from pfx file
      action: _win_import_pfx_cert
      args:
        path: "{{ _pfx_remote_tempfile.path }}"
        state: "{{ pfx_state | default('present', true) }}"
      register: pfx_import_result

  always:

    - name: remove local temp files
      file:
        path: "{{ item }}"
        state: absent
      when: item | default('', true)
      with_items:
       - "{{ (_pfx_crt_file | default({}, true)).path | default('', true) }}"
       - "{{ (_pfx_key_file | default({}, true)).path | default('', true) }}"
       - "{{ (_pfx_pfx_file | default({}, true)).path | default('', true) }}"
      delegate_to: localhost

    - name: remove remote temp file
      win_file:
        path: "{{ _pfx_remote_tempfile.path }}"
        state: absent
      when: (_pfx_remote_tempfile | default({}, true)).path | default('', true)
